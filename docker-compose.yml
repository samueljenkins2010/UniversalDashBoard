networks:
  grafana:
  services:

services:
  prometheus:
    image: prom/prometheus:v2.49.0
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - 9090:9090
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - services

  grafana:
    image: grafana/grafana:11.3.0
    container_name: grafana
    ports:
      - 3000:3000
    networks:
      - services
    environment:
      - "GF_DEFAULT_APP_MODE=development"
      - "GF_LOG_LEVEL=debug"
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin # grants admin role to anonymous access
      - GF_AUTH_ANONYMOUS_ENABLED=true # removes login 1/2
      - GF_AUTH_BASIC_ENABLED=false # removes login 2/2
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources

  consul:
    image: hashicorp/consul:1.16
    container_name: consul
    ports:
      - 8500:8500
    networks:
      - services
    environment:
      - CONSUL_BIND_INTERFACE=eth0

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    ports:
      - 8080:8080
    privileged: true
    networks:
      - services
    volumes:
      - /:/rootfs:ro
      - /etc:/etc:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      -  ${DOCKER_DATA_DIR:-/var/lib/docker}:/var/lib/docker:ro

  registrator:
    image: metabrainz/serviceregistrator:v0.5.3
    container_name: registrator
    hostname: registrator
    restart: unless-stopped
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - services
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: [ "--ip", "127.0.0.1", "--consul-port", "8500", "--consul-host", "host.docker.internal" ]
